<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WXML.Model</name>
    </assembly>
    <members>
        <member name="T:CommandLine.Utility.Arguments">
            <summary>
            Arguments class
            </summary>
        </member>
        <member name="P:WXML.Model.WXMLModelWriterSettings.IncludeBehaviour">
            <summary>
            Gets or sets the include behaviour.
            </summary>
            <value>The include behaviour.</value>
        </member>
        <member name="P:WXML.Model.WXMLModelWriterSettings.IncludeFileNamePattern">
            <summary>
            Pattern for include file name.
            </summary>
            <value>The include file name pattern.</value>
            <remarks>
            Available pattern variables:
            %MAIN_FILENAME% -   main file name
            %INCLUDE_NAME%  -   include file name
            </remarks>
        </member>
        <member name="P:WXML.Model.WXMLModelWriterSettings.DefaultIncludeFileName">
            <summary>
            Gets or sets the default name of the include file.
            </summary>
            <value>The name of the default include file.</value>
        </member>
        <member name="P:WXML.Model.WXMLModelWriterSettings.DefaultMainFileName">
            <summary>
            Gets or sets the default name of the main file.
            </summary>
            <value>The name of the default main file.</value>
        </member>
        <member name="P:WXML.Model.WXMLModelWriterSettings.IncludeFolderName">
            <summary>
            Gets or sets the name of the include folder.
            </summary>
            <value>The name of the include folder.</value>
        </member>
        <member name="F:WXML.Model.IncludeGenerationBehaviour.Inline">
            <summary>
            Generate inline include document or external.(<see cref="F:WXML.Model.IncludeGenerationBehaviour.Content"/> also set)
            </summary>
        </member>
        <member name="F:WXML.Model.IncludeGenerationBehaviour.Content">
            <summary>
            Generate content of the include file.
            </summary>
        </member>
        <member name="F:WXML.Model.IncludeGenerationBehaviour.PlaceInFolder">
            <summary>
            Place or not all include files in separate folder.(doesn't work with <see cref="F:WXML.Model.IncludeGenerationBehaviour.Inline"/> and <see cref="F:WXML.Model.IncludeGenerationBehaviour.Content"/>
            </summary>
        </member>
        <member name="F:WXML.CodeDom.LanguageSpecificHacks.DerivedGenericMembersRequireConstraits">
            <summary>
            Generic члены производных классов требует наличия констрейтов
            </summary>
        </member>
        <member name="F:WXML.CodeDom.LanguageSpecificHacks.MethodsInsteadParametrizedProperties">
            <summary>
            Генерировать методы вместо параметризованых пропертей
            </summary>
        </member>
        <member name="F:WXML.CodeDom.LanguageSpecificHacks.SafeUnboxToEnum">
            <summary>
            Безопасная распаковка переменных с кастом в энам
            </summary>
        </member>
        <member name="M:WXML.CodeDom.WXMLCodeDomGeneratorNameHelper.GetEntityClassName(WXML.Model.Descriptors.EntityDefinition)">
            <summary>
            Gets class name of the entity using settings
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:WXML.CodeDom.WXMLCodeDomGeneratorNameHelper.GetEntityClassName(WXML.Model.Descriptors.EntityDefinition,System.Boolean)">
            <summary>
            Gets class name of the entity using settings
            </summary>
            <param name="entity">The entity.</param>
            <param name="qualified">if set to <c>true</c> return qualified name.</param>
            <returns></returns>
        </member>
        <member name="M:WXML.CodeDom.WXMLCodeDomGeneratorNameHelper.GetEntitySchemaDefClassName(WXML.Model.Descriptors.EntityDefinition)">
            <summary>
            Gets the name of the schema definition class for entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="F:WXML.Model.EntityBehaviuor.Default">
            <summary>
            Default behaviour when generator creates default classes(entity and schema) with full method set.
            </summary>
        </member>
        <member name="F:WXML.Model.EntityBehaviuor.PartialObjects">
            <summary>
            'Partial object' behaviour when generator creates classes(entity and schema) without user depended behaviour for future extension.
            </summary>
        </member>
        <member name="F:WXML.Model.EntityBehaviuor.ForcePartial">
            <summary>
            Force 'partial' modifier with default behaviour.
            </summary>
        </member>
        <member name="F:WXML.Model.Field2DbRelations.PrimaryKey">
            <summary>
            PK or SyncInsert or [ReadOnly]
            </summary>
        </member>
        <member name="F:WXML.Model.Field2DbRelations.RowVersion">
            <summary>
            RV or [ReadOnly] or SyncUpdate or SyncInsert
            </summary>
        </member>
    </members>
</doc>
